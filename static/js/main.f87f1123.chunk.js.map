{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/Login.js","components/Register.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/PopupWithImage.js","utils/Api.js","utils/auth.js","components/ProtectedRoute.js","components/InfoToolTip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","loggedIn","userEmail","to","link","onClick","onLogout","description","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","includes","cardLikeButtonClassName","likesNumber","length","key","id","type","aria-label","onCardDelete","style","backgroundImage","onCardClick","name","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","index","Footer","Login","email","setUserEmail","password","setPassword","handleLoginSubmit","setEmail","history","useHistory","useEffect","push","action","title","onSubmit","placeholder","required","value","onChange","e","target","Register","handleRegisterSubmit","localStorage","getItem","PopupWithForm","isOpen","noValidate","children","buttonText","onClose","EditProfilePopup","useState","setName","setDescription","preventDefault","onUpdateUser","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","ref","AddPlacePopup","setTitle","setLink","PopupWithImage","api","baseUrl","headers","this","_baseUrl","_headers","token","fetch","Authorization","then","res","ok","json","imageLink","method","body","JSON","stringify","data","cardId","auth","options","Acccept","status","Error","userid","message","setItem","Promise","reject","catch","err","console","log","ProtectedRoute","Component","component","InfoToolTip","success","withRouter","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoToolTipOpen","setIsInfoToolTipOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","tooltipMode","setTooltipMode","registered","setRegistered","setToken","closeAllPopups","handleToolTip","resetForm","handleLogin","handleLogout","removeItem","getContent","getUserInfo","getInitialCards","Provider","exact","path","authorize","register","updateProfile","updateAvatar","current","addNewCard","newCard","changeLikeCardStatus","newCards","c","deleteCard","filter","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f87f1123.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from './../images/logo.svg';\n\nfunction Header(props) {\n  return (\n    <header className='header'>\n      <img className='header__logo' src={logo} alt='logo' />\n      <p className='header__email'>{props.loggedIn ? props.userEmail : ''}</p>\n      <Link\n        to={props.link.to}\n        className='header__link'\n        onClick={props.onLogout ? props.onLogout : null}\n      >\n        {props.link.description}\n      </Link>\n    </header>\n  );\n}\nexport default Header; ","import React from 'react';\n\nexport const CurrentUserContext = React.createContext({});","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  // Checking if you are the owner of the current card\n  const isOwn = currentUser && props.card.owner === currentUser._id;\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `card__delete-button ${\n    !isOwn && 'card__delete-button_hidden'\n  }`;\n\n  // Check if the card was liked by the current user\n   const isLiked = currentUser && props.card.likes.includes(currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `card__like-button ${\n    isLiked && 'card__like-button_active'}`;\n\n  const likesNumber = props.card.likes.length;\n\n  return (\n    <>\n      <li key={props.card.id} className='card'>\n        <div className='card__container'>\n          <button\n            type='button'\n            aria-label='Delete button'\n            className={cardDeleteButtonClassName}\n            onClick={() => {\n              props.onCardDelete(props.card);\n            }}\n          ></button>\n          <div\n            className='card__image'\n            style={{ backgroundImage: `url(${props.card.link})` }}\n            onClick={() => {\n              props.onCardClick(props.card);\n            }}\n          ></div>\n          <div className='card__text'>\n            <h2 className='card__title'>{props.card.name}</h2>\n            <div className='card__like-container'>\n              <button\n                type='button'\n                aria-label='Like button'\n                className={cardLikeButtonClassName}\n                onClick={() => {\n                  props.onCardLike(props.card);\n                }}\n              ></button>\n              <p className='card__like-counter'>{likesNumber}</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <>\n      <section className='profile'>\n        <div className='profile__container'>\n          <div className='profile__image-container'>\n            <button\n              className='profile__image-edit'\n              aria-label='Update profile image'\n              onClick={props.onEditAvatar}\n            ></button>\n            <img\n              className='profile__image'\n              src={currentUser && currentUser.avatar}\n              alt='profile-picture'\n            />\n          </div>\n          <div className='profile__info'>\n            <div className='profile__text'>\n              <h1 className='profile__title'>\n                {currentUser && currentUser.name}\n              </h1>\n              <p className='profile__subtitle'>\n                {currentUser && currentUser.about}\n              </p>\n            </div>\n            <button\n              className='button profile__edit-button'\n              aria-label='Edit button'\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n        </div>\n        <button\n          className='button profile__add-button'\n          aria-label='Add button'\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      {/* Template initial cards */}\n      <section className='cards'>\n        <ul className='cards__grid'>\n          {props.cards.map((card, index) => (\n            <Card\n              key={index}\n              card={card}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n}\nexport default Main;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>\n        © 2020 | Linda Kovacs - Around The U.S.\n      </p>\n    </footer>\n  );\n}\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction Login({\n    email,\n    loggedIn,\n    userEmail,\n    setUserEmail,\n    password,\n    setPassword,\n    handleLoginSubmit,\n    setEmail,\n  }) \n  {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (loggedIn) {\n      history.push('/main');\n      setUserEmail(email || userEmail);\n    }\n  });\n\n  return (\n    <>\n      <div className='auth__container'>\n        <h2 className='auth__title'>Log in</h2>\n        <form\n          action='#'\n          className='auth'\n          title='Log in'\n          onSubmit={handleLoginSubmit}\n          to='/main'\n        >\n          <input\n            className='form__input-dark'\n            placeholder='Email'\n            type='email'\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className='form__input-dark'\n            placeholder='Password'\n            type='password'\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            type='submit'\n            className='form__submit-button_dark'\n            onClick={handleLoginSubmit}\n          >\n            Log in\n          </button>\n        </form>\n        <Link className='auth__link' to='/signup'>\n          Not a member yet? Sign up here!\n        </Link>\n      </div>\n    </>\n  );\n}\nexport default Login; ","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Register({\n  handleRegisterSubmit,\n  history,\n  email,\n  setEmail,\n  password,\n  setPassword,\n}) {\n  \n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      history.push('/main');\n    }\n  }, [history]);\n\n  return (\n    <>\n      <div className='auth__container'>\n        <h2 className='auth__title'>Sign up</h2>\n        <form\n          action='#'\n          className='auth'\n          title='Sign up'\n          onSubmit={handleRegisterSubmit}\n        >\n          <input\n            className='form__input-dark'\n            placeholder='Email'\n            type='email'\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className='form__input-dark'\n            placeholder='Password'\n            type='password'\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            type='submit'\n            className='form__submit-button_dark'\n            onSubmit={handleRegisterSubmit}\n            to='/main'\n          >\n            Sign up\n          </button>\n        </form>\n        <Link className='auth__link' to='/signin'>\n          Already a member? Log in here!\n        </Link>\n      </div>\n    </>\n  );\n}\nexport default Register; ","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <>\n      <section\n        className={`form form__${props.name} ${\n          props.isOpen ? 'form_visible' : ''\n        }`}\n      >\n        <form\n          className='form__container'\n          name={`form__${props.name}`}\n          action='#'\n          noValidate\n          onSubmit={props.onSubmit}\n        >\n          <h2 className='form__title'>{props.title}</h2>\n          {props.children}\n          <button\n            className='form__submit-button'\n            type='submit'\n          >\n            {props.buttonText}\n          </button>\n          <button\n            className='form__reset-button'\n            type='reset'\n            aria-label='Close button'\n            onClick={props.onClose}\n          ></button>\n        </form>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  // After loading the current user from the API\n  // their data will be used in managed components.\n  React.useEffect(() => {\n    setName(currentUser && currentUser.name);\n    setDescription(currentUser && currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name='edit-profile'\n      title='Edit profile'\n      buttonText='Save'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <fieldset className='form__fields'>\n        <input\n          type='text'\n          className='form__input form__title'\n          id='name-input'\n          name='name'\n          placeholder='Name'\n          minLength='2'\n          maxLength='40'\n          required\n          value={name || ''}\n          onChange={handleNameChange}\n        />\n        <span className='form__input-error' id='name-input-error'></span>\n\n        <input\n          type='text'\n          className='form__input form__subtitle'\n          id='job-input'\n          name='job'\n          placeholder='Job'\n          minLength='2'\n          maxLength='200'\n          required\n          value={description || ''}\n          onChange={handleDescriptionChange}\n        />\n        <span className='form__input-error' id='job-input-error'></span>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n          avatar: avatarRef,\n        });\n    }\n\n    return (\n      <PopupWithForm\n        name='change-image'\n        title='Change profile picture'\n        buttonText='Save'\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n      >\n        <fieldset className='form__fields'>\n          <input\n            type='url'\n            className='form__input form__image-link'\n            id='linkImage-input'\n            name='imageLink'\n            placeholder='Image link'\n            minLength='2'\n            required\n            ref={avatarRef}\n          />\n          <span className='form__input-error' id='linkImage-input-error'></span>\n        </fieldset>\n      </PopupWithForm>\n    );\n}\nexport default EditAvatarPopup;","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [title, setTitle] = useState('');\n    const [link, setLink] = useState('');\n\n    function handleTitleChange(e) {\n      setTitle(e.target.value);\n    }\n\n    function handleLinkChange(e) {\n      setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      props.onAddPlace({ title, link });\n    }\nreturn (\n  <PopupWithForm\n    name='add-card'\n    title='New place'\n    buttonText='Create'\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    onSubmit={handleSubmit}\n  >\n    <fieldset className='form__fields'>\n      <input\n        type='text'\n        className='form__input form__card-title'\n        id='card-input'\n        name='title'\n        placeholder='Title'\n        minLength='1'\n        maxLength='30'\n        required\n        onChange={handleTitleChange}\n      />\n      <span className='form__input-error' id='card-input-error'></span>\n      <input\n        type='url'\n        className='form__input form__image-link'\n        id='link-input'\n        name='link'\n        placeholder='Image link'\n        required\n        onChange={handleLinkChange}\n      />\n      <span className='form__input-error' id='link-input-error'></span>\n    </fieldset>\n  </PopupWithForm>\n);\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction PopupWithImage(props) {\n  return (\n    <>\n      <section className={'form form__add-image' + (props.card ? ' form_visible' : '')}>\n        <div className='form__open-image'>\n          <button\n            className='form__reset-button'\n            type='reset'\n            aria-label='Close button'\n            onClick={props.onClose}\n          ></button>\n          <img\n            className='form__image'\n            src={props.card ? props.card.link : '#'}\n            alt={props.card ? props.card.name : ''}\n          />\n          <p className='form__image-title'>\n            {props.card ? props.card.name : ''}\n          </p>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithImage;","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // getAppInfo() {\n  //   return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  // }\n\n  // Load Cards from the Server\n  getInitialCards(token) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n\n  // Load User Information from the Server\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n\n  // Update Profile Picture\n  updateAvatar(imageLink, token) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'PATCH',\n      body: JSON.stringify({ avatar: imageLink }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n\n  // Edit Profile\n  updateProfile({name, about}, token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'PATCH',\n      body: JSON.stringify({ name, about }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n\n  // Add New Card\n  addNewCard(data, token) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n\n  // Delete Card\n  deleteCard(cardId, token) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'DELETE',\n    })\n  }\n\n  // Add and Remove Likes\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      method: isLiked ? 'DELETE' : 'PUT',\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      });\n  }\n}\n\n  // Add and Remove Likes\n  // changeLikeCardStatus(isLiked, cardId) {\n  //   if (isLiked) {\n  //     //unlike heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: 'DELETE',\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   } else {\n  //     //like heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: 'PUT',\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n// }\n\nconst api = new Api({\n  baseUrl: 'http://localhost:3001', //localhost\n  //baseUrl: \"https://api.lkovacs.students.nomoreparties.site\", //api back-end\n  // baseUrl: 'https://around.nomoreparties.co/v1/group-2',\n  // headers: {\n  //   // Authorization: 'd38c3eff-8aa3-43a2-86b1-ec6a6fc8a616',\n  //   'Content-Type': 'application/json',\n  //   Authorization: `Bearer ${token}`,\n  // },\n});\n\nexport default api;","class Auth {\n  constructor(options) {\n    this.options = options;\n  }\n\n  register(email, password) {\n     return (\n       fetch(`${this.options.baseUrl}/signup`, {\n         method: 'POST',\n         headers: {\n           Acccept: 'application/json',\n           'Content-Type': 'application/json',\n         },\n         body: JSON.stringify({ email, password }),\n       })\n         //  .then((res) => {\n         //    return res.json();\n         //  });\n         .then((res) => {\n           if (res.status === 201) {\n             return res.json();\n           } else {\n             throw new Error('409 - Unsuccessful registration');\n           }\n         })\n     );\n  }\n\n  authorize(userid, password) {\n    return fetch(`${this.options.baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        Acccept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email: userid, password: password }),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        if (!data.message) {\n          localStorage.setItem('token', data.token);\n          return data;\n          // } else {\n          //   return;\n        }\n      });\n  }\n\n  getContent(token) {\n    return fetch(`${this.options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        Acccept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        return res.ok\n          ? res.json()\n          : Promise.reject(`${res.status} - ${res.message}`);\n      })\n      .then((data) => {\n        return data;\n      })\n      .catch((err) => console.log(err));\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'http://localhost:3001', //localhost\n  //baseUrl: \"https://api.lkovacs.students.nomoreparties.site\", //api backend\n  // baseUrl: 'https://register.nomoreparties.co',\n});\n\nexport default auth;\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ component: Component, ...props }) {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='./signin' />\n        )\n      }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;","import React from 'react';\n\nfunction InfoToolTip(props) {\n\n  return (\n    <section\n      className={`form form__${props.name} ${\n        props.isOpen ? 'form_visible' : ''\n      }`}\n    >\n      <div className='form__container'>\n        <div\n          className={`form__tooltip ${\n            props.success === 'success'\n              ? `form__tooltip_success`\n              : `form__tooltip_error`\n          }`}\n        />\n        <p className='form__tooltip-message'>\n          {props.success === 'success'\n            ? 'Success! You have now been registered.'\n            : 'Oops, something went wrong! Please try again.'}\n        </p>\n        <button\n          className='form__reset-button'\n          type='reset'\n          aria-label='Close button'\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoToolTip;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithImage from './PopupWithImage';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport auth from '../utils/auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [tooltipMode, setTooltipMode] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [registered, setRegistered] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  const history = useHistory();\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoToolTipOpen(false);\n  }\n\n  function handleToolTip(success) {\n    setTooltipMode(success);\n    setIsInfoToolTipOpen(true);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .updateProfile({ name, about }, token)\n      .then((res) => {\n        setCurrentUser(res.data);\n      })\n      .catch((err) => console.log(err));\n      closeAllPopups();\n  }\n\n    function handleUpdateAvatar({ avatar }) {\n      api\n        .updateAvatar(avatar.current.value, token)\n        .then((res) => {\n          setCurrentUser(res.data);\n        })\n        .catch((err) => console.log(err));\n      closeAllPopups();\n    }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.includes(currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api\n      .changeLikeCardStatus(card._id, isLiked, token) \n      .then((newCard) => {\n        // Create a new array based on the existing one and putting a new card into it\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Update the state\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id, token)\n      .then(() => {\n        setCards(cards.filter((c) => c._id !== card._id));\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlace({ title, link }) {\n    api\n      .addNewCard({ title, link }, token)\n      .then((newCard) => {\n        setCards([newCard.data, ...cards]);\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function resetForm() {\n    setEmail('');\n    setPassword('');\n  }\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function handleLoginSubmit(e) {\n    e.preventDefault();\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data && data.token) {\n          setToken(data.token);\n          localStorage.setItem('token', data.token);\n          handleLogin();\n          history.push('/main');\n        } else {\n          resetForm();\n          if (!email || !password) {\n            handleToolTip('error');\n            throw new Error(\n              '400 - one or more of the fields were not provided'\n            );\n          }\n          if (!data) {\n            handleToolTip('error');\n            throw new Error(\n              '401 - the user with the specified email not found'\n            );\n          }\n        }\n      })\n      .catch((err) => console.log(err.message));\n  };\n\n  function handleRegisterSubmit (e) {\n    e.preventDefault();\n    auth\n      .register(email, password)\n      .then((res) => {\n        //  if (!(res.data && res.data._id)) {\n          if (!(res && res._id)) {\n            handleToolTip('error');\n            // throw new Error(`400 - ${res.message ? res.message : res.error}`);\n            // throw new Error(\n            //   `409(Conflict)  - ${res.message ? res.message : res.error}`\n            // );\n            if (res.status === 409) {\n              return Promise.reject(\n                new Error('(Conflict) - User already taken')\n              );\n            }\n          } else {\n            handleToolTip('success');\n          }\n      })\n      .then((res) => {\n        setRegistered(true);\n        history.push('/signin');\n        return res;\n      })\n      .then(resetForm)\n      .catch((err) => console.log(err));\n  };\n\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    history.push('/signin');\n  }\n\n  useEffect(() => {\n    if (token) {\n      auth\n        .getContent(token)\n        .then((res) => {\n          setLoggedIn(true);\n          setUserEmail(res.data.email);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      setLoggedIn(false);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    api\n      .getUserInfo(token)\n      .then((res) => {\n        setCurrentUser(res.data);\n        api\n          .getInitialCards(token)\n          .then((res) => {\n            if (res.data) {\n              setCards((cards) => res.data);\n              // setCards((cards) => [...cards, res.data]);\n            }\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  }, [token]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n        <Route exact path='/signin'>\n          <Header\n            userEmail={userEmail}\n            loggedIn={loggedIn}\n            onLogout={handleLogout}\n            link={{ description: 'Sign up', to: '/signup' }}\n          />\n          <Login\n            loggedIn={loggedIn}\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            userEmail={setUserEmail}\n            setUserEmail={setUserEmail}\n            handleLogin={handleLogin}\n            handleLoginSubmit={handleLoginSubmit}\n            onLogout={handleLogout}\n            isOpen={isInfoToolTipOpen}\n            handleToolTip={handleToolTip}\n            success={tooltipMode}\n          />\n          <InfoToolTip\n            isOpen={isInfoToolTipOpen}\n            success={tooltipMode}\n            onClose={closeAllPopups}\n            loggedIn={loggedIn}\n          />\n        </Route>\n        <Route exact path='/signup'>\n          <Header\n            userEmail={userEmail}\n            loggedIn={loggedIn}\n            link={{ description: 'Log in', to: '/signin' }}\n          />\n          <Register\n            registered={registered}\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleRegisterSubmit={handleRegisterSubmit}\n            setUserEmail={setUserEmail}\n            handleLogin={handleLogin}\n            handleToolTip={handleToolTip}\n          />\n          <InfoToolTip\n            isOpen={isInfoToolTipOpen}\n            success={tooltipMode}\n            onClose={closeAllPopups}\n            loggedIn={loggedIn}\n          />\n        </Route>\n        <Route exact path='/'>\n          {loggedIn ? <Redirect to='/main' /> : <Redirect to='/signin' />}\n        </Route>\n        <Route path='/main'>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlace}\n          />\n          <PopupWithForm\n            name='confirmation'\n            title='Are you sure?'\n            isOpen={false}\n            onClose={closeAllPopups}\n          />\n          <PopupWithImage onClose={closeAllPopups} card={selectedCard} />\n          <Header\n            loggedIn={loggedIn}\n            userEmail={userEmail}\n            link={{ description: 'Log out', to: '/signin' }}\n            onLogout={handleLogout}\n          />\n          <ProtectedRoute\n            path='/main'\n            loggedIn={loggedIn}\n            component={Main}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            onClose={closeAllPopups}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            selectedCard={selectedCard}\n            cards={cards}\n          />\n        </Route>\n        <Redirect from='*' to='/' />\n      </Switch>\n      <Footer />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}